import marshal, base64

def run_encrypted():
    data = base64.b64decode('')
    code = marshal.loads(data)
    exec(code, globals())  # Use globals so imports like argparse work properly

if __name__ == '__main__':
    run_encrypted()
